# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  schedule:
    - cron: "0 2 * * 6"

jobs:
  check_version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.8 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check version
        if: (github.event_name == 'pull_request' && github.base_ref == 'master')
        # TODO: Remove torch installation here after deprecating C++ code.
        run: |
          pip install torch
          pip install git+https://github.com/google-research/torchsde.git
          master_info=$(pip list | grep torchsde)
          master_version=$(echo ${master_info} | cut -d " " -f2)

          pip uninstall torchsde
          python setup.py install
          pr_info=$(pip list | grep torchsde)
          pr_version=$(echo ${pr_info} | cut -d " " -f2)

          echo "import itertools as it
                import sys

                master_version = sys.argv[1]
                pr_version = sys.argv[2]

                master_version_ = [int(i) for i in master_version.split('.')]
                pr_version_ = [int(i) for i in pr_version.split('.')]

                master_version__ = tuple(m for p, m in it.zip_longest(pr_version_, master_version_, fillvalue=0))
                pr_version__ = tuple(p for p, m in it.zip_longest(pr_version_, master_version_, fillvalue=0))
                sys.exit(pr_version__ <= master_version__)" >> check_version.py

          python check_version.py ${master_version} ${pr_version}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.6, 3.8 ]
        # TODO: Add back windows after blist is removed.
        os: [ ubuntu-latest, macOS-latest ]
    needs: [ check_version ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        # TODO: Remove torch installation here after deprecating C++ code.
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install torch
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          python setup.py develop
          cd ..
          pytest torchsde/tests
